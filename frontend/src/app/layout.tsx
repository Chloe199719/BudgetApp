import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { Providers } from "@/lib/redux/providers";
import { cookies } from "next/headers";
import axios from "axios";
import CheckUser from "@/components/auth/CheckUser";
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = cookies();
  const sessionId = cookieStore.get("sessionid");
  const userData = await getUserData(sessionId?.value);
  return (
    <Providers>
      <CheckUser userData={userData} />
      <html lang="en">
        <body className={inter.className}>{children}</body>
      </html>
    </Providers>
  );
}
async function getUserData(sessionId?: string) {
  try {
    if (!sessionId) return;
    const res = await axios.get(BACKEND_URL + "users/current-user", {
      withCredentials: true,
      headers: { Cookie: `sessionid=${sessionId}` },
    });
    console.log(res.data);
    return res.data as CurrentUserData;
  } catch (error) {
    return;
  }
}
export const BACKEND_URL = "http://localhost:5000/";

export type CurrentUserData = {
  id: string;
  email: string;
  display_name: string;
  unique_name: string;
  is_active: boolean;
  is_staff: boolean;
  is_superuser: boolean;
  thumbnail?: string;
  data_joined: string;
  profile: {
    id: string;
    phone_number?: string;
    about_me?: string;
    pronouns?: string;
    avatar_link?: string;
    birth_date?: string;
    github_link?: string;
  };
};
